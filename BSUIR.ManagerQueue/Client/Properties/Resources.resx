<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountTabName" xml:space="preserve">
    <value>My Account</value>
  </data>
  <data name="ApplicationName" xml:space="preserve">
    <value>Manager Queue</value>
  </data>
  <data name="CancelButtonText" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ChangePasswordButtonName" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="ConfirmPasswordFieldLabel" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="ConnectionFailedExceptionMessage" xml:space="preserve">
    <value>Unable to connect to the server. Please check your network connection or try again later</value>
  </data>
  <data name="EmployeeRoleName" xml:space="preserve">
    <value>Employee</value>
  </data>
  <data name="ExitQueueButtonText" xml:space="preserve">
    <value>Exit queue</value>
  </data>
  <data name="FirstNameFieldLabel" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="InvalidServiceUriExceptionMessage" xml:space="preserve">
    <value>Service address is invalid. Please set the correct address in the application configuration file.</value>
  </data>
  <data name="LastNameFieldLabel" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="ManagerNameColumnHeader" xml:space="preserve">
    <value>Manager name</value>
  </data>
  <data name="ManagerRoleName" xml:space="preserve">
    <value>Manager</value>
  </data>
  <data name="MiddleNameFieldLabel" xml:space="preserve">
    <value>Middle name</value>
  </data>
  <data name="MissingFieldErrorMessageTemplate" xml:space="preserve">
    <value>Field '{0}' cannot be empty</value>
  </data>
  <data name="MoveDownButtonText" xml:space="preserve">
    <value>Move down</value>
  </data>
  <data name="MoveUpButtonText" xml:space="preserve">
    <value>Move up</value>
  </data>
  <data name="MyQueueTabName" xml:space="preserve">
    <value>My Queue</value>
  </data>
  <data name="NameFieldLabel" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="OrderFieldLabel" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="PasswordFieldLabel" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordsDoNotMatchErrorMessage" xml:space="preserve">
    <value>Passwords do not match</value>
  </data>
  <data name="PositionComboBoxPlaceholder" xml:space="preserve">
    <value>Select a position or enter a new one...</value>
  </data>
  <data name="PositionFieldLabel" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="PriorityFieldLabel" xml:space="preserve">
    <value>Priority</value>
  </data>
  <data name="QueueEntriesTabName" xml:space="preserve">
    <value>Queues I'm In</value>
  </data>
  <data name="RegisterButtonText" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RegisterLabelText" xml:space="preserve">
    <value>Don't have an account?</value>
  </data>
  <data name="RegistrationFailedExceptionMessage" xml:space="preserve">
    <value>Unable to register using the provided information</value>
  </data>
  <data name="RegistrationWindowTitle" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RememberMeCheckBoxText" xml:space="preserve">
    <value>Remember me</value>
  </data>
  <data name="RemoveQueueItemButtonText" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="RevertChangesButtonName" xml:space="preserve">
    <value>Revert changes</value>
  </data>
  <data name="SaveChangesButtonName" xml:space="preserve">
    <value>Save changes</value>
  </data>
  <data name="SaveOrderButtonText" xml:space="preserve">
    <value>Save order</value>
  </data>
  <data name="SecretaryRoleName" xml:space="preserve">
    <value>Secretary</value>
  </data>
  <data name="ServiceUriNotSetExceptionMessage" xml:space="preserve">
    <value>Service address not set. Please set the correct address in the application configuration file.</value>
  </data>
  <data name="SignInButtonText" xml:space="preserve">
    <value>Sign in</value>
  </data>
  <data name="SignInErrorExceptionMessage" xml:space="preserve">
    <value>Unable to authenticate using the provided credentials</value>
  </data>
  <data name="SignInWindowTitle" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="UnableToCreateErrorMessageTemplate" xml:space="preserve">
    <value>Unable to create entity'{0}'</value>
  </data>
  <data name="UserFetchFailedExceptionMessage" xml:space="preserve">
    <value>Unable to get user information</value>
  </data>
  <data name="UserNameFieldLabel" xml:space="preserve">
    <value>User name</value>
  </data>
  <data name="UserTypeFieldLabel" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="ViceManagerRoleName" xml:space="preserve">
    <value>Vice</value>
  </data>
</root>